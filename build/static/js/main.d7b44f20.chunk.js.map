{"version":3,"sources":["services/persons.js","components/PersonForm.js","components/Filter.js","components/Persons.js","components/Notification.js","App.js","index.js"],"names":["baseUrl","personsServices","getAll","axios","get","then","response","data","create","newPerson","post","remove","id","delete","update","updatedPerson","put","PersonForm","persons","setPersons","setMessage","setStatus","useState","newName","setNewName","newNumber","setNewNumber","onSubmit","e","preventDefault","name","number","foundObj","find","person","undefined","concat","window","confirm","map","catch","err","console","log","setTimeout","value","onChange","target","type","Filter","filterName","setFilterName","Persons","personsToShow","filter","toUpperCase","includes","index","onClick","alert","Notification","message","status","className","App","useEffect","initialPersons","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.d7b44f20.chunk.js","sourcesContent":["import axios from 'axios';\r\n\r\nconst baseUrl = '/api/persons';\r\n\r\nconst getAll = () => {\r\n    const request = axios.get(baseUrl);\r\n    return request.then(response => response.data)\r\n}\r\n\r\nconst create = newPerson => {\r\n    const request = axios.post(baseUrl, newPerson)\r\n    return request.then(response => response.data)\r\n}\r\n\r\nconst remove = id => {\r\n    return axios.delete(`${baseUrl}/${id}`)\r\n}\r\n\r\nconst update = (id, updatedPerson) => {\r\n    const request = axios.put(`${baseUrl}/${id}`, updatedPerson);\r\n    return request.then(response => response.data)\r\n} \r\n\r\nconst personsServices = {getAll, create, remove, update}\r\n\r\nexport default personsServices","import React, { useState } from 'react'\r\nimport personsServices from '../services/persons'\r\n\r\nconst PersonForm = ({persons, setPersons, setMessage, setStatus}) => {\r\n    \r\n    const [ newName, setNewName ] = useState('');\r\n    const [ newNumber, setNewNumber ] = useState('');\r\n\r\n    const addPerson = (e) => {\r\n        e.preventDefault();\r\n        const newPerson = {\r\n            name: newName,\r\n            number: newNumber\r\n        }\r\n\r\n        const foundObj = persons.find(person => person.name === newPerson.name);\r\n\r\n        if(foundObj === undefined) {\r\n            personsServices\r\n                .create(newPerson)\r\n                .then(person => {\r\n                    setPersons(persons.concat(person));\r\n                    setMessage(\r\n                        `Added ${newPerson.name}`\r\n                    )\r\n                    setStatus('success')\r\n                })\r\n        } else {\r\n            const result = window.confirm(`${foundObj.name} is already added to phonebook. Replace the old number with a new one?`);\r\n            \r\n            if(result) {\r\n                const updatedPerson = {...foundObj, ...newPerson};\r\n                const id = foundObj.id;\r\n\r\n                personsServices\r\n                    .update(id, updatedPerson)\r\n                    .then(updatedPerson => {\r\n                        setPersons(persons.map(person => person.id !== id ? person : updatedPerson))\r\n                        setMessage(\r\n                            `Number of '${updatedPerson.name}' has been changed`\r\n                        )\r\n                        setStatus('warning')\r\n                    })\r\n                    .catch(err => {\r\n                        setMessage(\r\n                            `Information of ${updatedPerson.name}  ${id} has been removed from server`\r\n                        )\r\n                        setStatus('error')\r\n                    })\r\n                \r\n            }\r\n        }\r\n        console.log(persons);\r\n\r\n        setTimeout(() => {\r\n            setMessage(null);\r\n            setStatus('');\r\n        }, 5000)\r\n\r\n        setNewName('');\r\n        setNewNumber('');\r\n    }\r\n\r\n    const handleNameChange = (e) => {\r\n        setNewName(e.target.value);\r\n    }\r\n\r\n    const handleNumberChange = (e) => {\r\n        setNewNumber(e.target.value);\r\n    }\r\n    return (\r\n        <form onSubmit={addPerson}>\r\n            <div>\r\n                name: <input value={newName} onChange={handleNameChange}/>\r\n            </div>\r\n            <div>\r\n                number: <input value={newNumber} onChange={handleNumberChange}/>\r\n            </div>\r\n            <div>\r\n                <button type=\"submit\">add</button>\r\n            </div>\r\n        </form>\r\n    )\r\n}\r\n\r\nexport default PersonForm","import React from 'react'\r\n\r\nconst Filter = ({ filterName, setFilterName }) => {\r\n\r\n  const handleFilterChange = (e) => {\r\n    setFilterName(e.target.value);\r\n  }\r\n\r\n  return (\r\n    <input value={filterName} onChange={handleFilterChange}/>\r\n  )\r\n\r\n}\r\n\r\nexport default Filter","import React from 'react'\r\nimport personsServices from '../services/persons'\r\n\r\nconst Persons = ({ persons, setPersons, filterName }) => {\r\n\r\n  const handleDeleteClick = (id, name) => {\r\n    const result = window.confirm(`Delete ${name}`);\r\n    if(result) {\r\n      personsServices\r\n        .remove(id)\r\n        .then(() => {\r\n          setPersons(persons.filter(person => person.id !== id))\r\n        })\r\n        .catch(err => {\r\n          alert(`${name}' number was deleted`)\r\n          setPersons(persons.filter(person => person.id !== id))\r\n        })\r\n    }\r\n  }\r\n\r\n  const personsToShow = persons.filter(person => {\r\n    const name = person.name.toUpperCase();\r\n    return name.includes(filterName.toUpperCase());\r\n  })\r\n\r\n  return (\r\n    <div>\r\n      {personsToShow.map((person, index) => {\r\n        return(\r\n          <p key={index}>\r\n            {person.name} {person.number}\r\n            <button onClick={() => handleDeleteClick(person.id, person.name)}>Delete</button>\r\n          </p>\r\n        )\r\n      })}\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default Persons","import React from 'react'\r\n\r\nconst Notification = ({ message, status }) => {\r\n    if(message === null) {\r\n        return null\r\n    } else {\r\n        return (\r\n            <div className={status}>\r\n                {message}\r\n            </div>\r\n        )\r\n    } \r\n}\r\n\r\nexport default Notification","import React, { useState, useEffect } from 'react';\nimport PersonForm from './components/PersonForm';\nimport Filter from './components/Filter';\nimport Persons from './components/Persons';\nimport personsServices from './services/persons'\nimport Notification from './components/Notification';\nimport './index.css'\n\nconst App = () => {\n\n  const [ persons, setPersons ] = useState([]); \n  const [ filterName, setFilterName ] = useState('');\n  const [ message, setMessage ] = useState(null);\n  const [ status, setStatus ] = useState(null);\n\n  useEffect(() => {\n    personsServices\n      .getAll()\n      .then((initialPersons) => {\n        setPersons(initialPersons)\n      })\n  }, [])\n\n  return (\n    <div>\n      <h2>Phonebook</h2>\n      <Notification \n        message={message}\n        status={status}\n      />\n      <Filter \n        filterName={filterName}\n        setFilterName={setFilterName}\n      />\n      <h3>Add a new phonebook</h3>\n      <PersonForm\n        persons={persons}\n        setPersons={setPersons}\n        setMessage={setMessage}\n        setStatus={setStatus}\n      />\n      <h3>Numbers</h3>\n      <Persons \n        persons={persons}\n        filterName={filterName}\n        setPersons={setPersons}\n      />\n    </div>\n  )\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root')\n);"],"sourceRoot":""}